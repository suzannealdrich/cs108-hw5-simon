// CSimonButton.cp#include "CSimonButton.h"#include <sound.h>#include "SimonConstants.h"CSimonButton::CSimonButton(LStream *inStream)	: LControl(inStream) {	inStream->ReadData(&mColor, sizeof(mColor));	inStream->ReadData(&mSoundID, sizeof(mSoundID));		mDown = false;}void CSimonButton::DrawSelf() {	Rect frame;		CalcLocalFrameRect(frame);	::PenNormal();	if (!mDown) {		::RGBForeColor(&mColor);		::PaintRect(&frame);	} else {		::EraseRect(&frame);		Rect smaller = frame;		::InsetRect(&smaller, 4, 4);				RGBColor hiColor = mColor;		hiColor.red += (65535 - mColor.red) / 2;		hiColor.green += (65535 - mColor.green) / 2;		hiColor.blue += (65535 - mColor.blue) / 2;				::RGBForeColor(&hiColor);		::PaintRect(&smaller);		::PenMode(srcXor);		for (int i = 0; i < 4; i++) {			::InsetRect(&smaller, -1, -1);			::FrameRect(&smaller);		}		::PenNormal();	}}void CSimonButton::HotSpotAction(	SInt16		inHotSpot,	Boolean		inCurrInside,	Boolean		inPrevInside){	if (inCurrInside != inPrevInside) {			mDown = inCurrInside;		Refresh();		UpdatePort();		if (mDown) DoPlaySound();	}}void CSimonButton::HotSpotResult(SInt16 inHotSpot) {	HotSpotAction(inHotSpot, false, true);	BroadcastMessage(msg_SimonClick, this);}void CSimonButton::DoPlaySound() {	Handle sound = ::Get1Resource('snd ', mSoundID);	if (sound != NULL) {		::SndPlay(NULL, (SndListHandle)sound, false);		::ReleaseResource(sound);	}}